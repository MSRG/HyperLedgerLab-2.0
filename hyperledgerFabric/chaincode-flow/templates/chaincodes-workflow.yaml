{{- $vars:= dict}}
{{- if .Values.externalOrderer.enabled }}
  {{- $_ := set $vars "ordererOrgName" $.Values.externalOrderer.orgName }}
  {{- $_ := set $vars "ordererUrl" (printf "%s.%s:%s" $.Values.externalOrderer.host $.Values.externalOrderer.domain $.Values.externalOrderer.port)  }}
  {{- $_ := set $vars "ordererHost" $.Values.externalOrderer.host }}
  {{- $_ := set $vars "ordererTlsSecret"  (printf "hlf-orderer--%s-external-tlsca" ($vars.ordererOrgName | lower)) }}
{{- else }}
  {{- $ordererOrg := index .Values.OrdererOrgs 0 }}
  {{- $ordererAddress := $.Values.useActualDomains | ternary (printf "%s.%s" (index $ordererOrg.Specs 0).Hostname $ordererOrg.Domain) (printf "hlf-orderer--%s--%s" ($ordererOrg.Name | lower) ((index $ordererOrg.Specs 0).Hostname | lower)) }} 
  {{- $_ := set $vars "ordererOrgName" $ordererOrg.Name }}
  {{- $_ := set $vars "ordererUrl" (printf "%s:7050" $ordererAddress ) }}
  {{- $_ := set $vars "ordererHost" (index $ordererOrg.Specs 0).Hostname }}
  {{- $_ := set $vars "ordererTlsSecret"  (printf "hlf-orderer--%s-tlsca" ($ordererOrg.Name | lower)) }}
{{- end }}

apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: hlf-chaincodes-
spec:
  entrypoint: chaincodes

  # additional entries going into /etc/hosts file
  {{- if $.Values.hostAliases }}
  hostAliases:
  {{- range $i, $alias := $.Values.hostAliases }}
  - ip: {{ $alias.ip }}
    hostnames: {{ $alias.hostnames }}
  {{- end }}
  {{- end }}{{""}}
  
  volumes:
  - name: orderer-tlsca
    secret:
      secretName: {{ $vars.ordererTlsSecret }}

{{- range $i, $org := .Values.PeerOrgs }}

  - name: peer-{{ $org.Name | lower }}-admin-msp
    secret:
      secretName: hlf-peer--{{ $org.Name | lower }}--admin-msp
      items:
      - key: config.yaml
        path: config.yaml
      - key: cert.pem
        path: signcerts/cert.pem
      - key: key.pem
        path: keystore/key.pem
      - key: cacert.pem
        path: cacerts/ca.{{ $org.Domain }}-cert.pem
      - key: tlscacert.pem
        path: tlscacerts/cert.pem
      - key: admincert.pem
        path: admincerts/cert.pem

{{- range $peerIndex := until ($org.Template.Count | int) }}
{{- $peer := (printf "peer%s" ($peerIndex | toString)) }}

  - name: peer-{{ $org.Name | lower }}-{{ $peer | lower }}-tls
    secret:
      secretName: hlf-peer--{{ $org.Name | lower }}--{{ $peer | lower }}-tls
      
{{- end }} {{- /* Peers */ -}}
{{- end }} {{- /* Orgs */ -}}{{""}}

  # chaincodes configMaps
  {{- range $i, $chaincode := $.Values.network.chaincodes }}    
  {{- if or (not $.Values.flow.chaincode.include) (has $chaincode.name $.Values.flow.chaincode.include) }}
  - name: chaincode-{{ $chaincode.name | lower }}
    configMap:
      name: hlf-chaincode--{{ $chaincode.name | lower }}
  {{- end }} {{- /* if chaincode included */ -}}
  {{- end }}

  templates:
  - name: chaincodes
    steps:
# top level: chaincodes
{{- $_ := set $vars "firstStep" true }}
{{- range $i, $chaincode := .Values.network.chaincodes }}
{{- if or (not $.Values.flow.chaincode.include) (has $chaincode.name $.Values.flow.chaincode.include) }}
{{- if or $vars.firstStep (not $.Values.flow.chaincode.parallel) }}
    - 
{{- end }}
      - name: chaincode--{{ $chaincode.name }}
        template: chaincode--{{ $chaincode.name }}
{{- $_ := set $vars "firstStep" false }}
{{- end }} {{- /* if chaincode included */ -}}
{{- end }} {{- /* chaincodes */ -}}{{""}}

# second level: chaincode templates
{{- range $i, $chaincode := .Values.network.chaincodes }}
{{- if or (not $.Values.flow.chaincode.include) (has $chaincode.name $.Values.flow.chaincode.include) }}
{{- $version := (not $chaincode.version) | ternary $.Values.chaincode.version $chaincode.version }}
  - name: chaincode--{{ $chaincode.name }}
    steps:
    {{- if $.Values.flow.install.enabled }}
    - - name: install-chaincode--{{ $chaincode.name }}-{{ $version | replace "." "-" }}
        template: install-chaincode--{{ $chaincode.name }}-{{ $version | replace "." "-" }}
    {{- end }}
    {{- if $.Values.flow.approve.enabled }}
    - - name: approve-chaincode--{{ $chaincode.name }}-{{ $version | replace "." "-" }}
        template: approve-chaincode--{{ $chaincode.name }}-{{ $version | replace "." "-" }}
    {{- end }}
    {{- if $.Values.flow.commit.enabled }}
    - - name: commit-chaincode--{{ $chaincode.name }}
        template: commit-chaincode--{{ $chaincode.name }}
    {{- end }}
    {{- if $.Values.flow.invoke.enabled }}
    - - name: invoke-chaincode--{{ $chaincode.name }}
        template: invoke-chaincode--{{ $chaincode.name }}
    {{- end }}
{{- end }} {{- /* if chaincode included */ -}}
{{- end }} {{- /* chaincodes */ -}}{{""}}

# third level: install chaincode templates
{{- if $.Values.flow.install.enabled }}
{{- range $i, $chaincode := .Values.network.chaincodes }}
{{- if or (not $.Values.flow.chaincode.include) (has $chaincode.name $.Values.flow.chaincode.include) }}
{{- $version := (not $chaincode.version) | ternary $.Values.chaincode.version $chaincode.version }}
{{- $_ := set $vars "firstStep" true }}
  - name: install-chaincode--{{ $chaincode.name }}-{{ $version | replace "." "-" }}
    steps:
     
{{- range $orgName := $chaincode.orgs }}
{{- range $i, $org := $.Values.PeerOrgs }}

{{- if eq $orgName $org.Name }}

{{- range $peerIndex := until ($org.Template.Count | int) }}
{{- $peer := (printf "peer%s" ($peerIndex | toString)) }}
{{- if or $vars.firstStep (not $.Values.flow.install.parallel) }}
    - 
{{- end }}
      - name: maybe-install-chaincode--{{ $chaincode.name }}-{{ $version | replace "." "-" }}--{{ $org.Name }}--{{ $peer }}
        template: maybe-install-chaincode--{{ $chaincode.name }}-{{ $version | replace "." "-" }}--{{ $org.Name }}--{{ $peer }}
{{- $_ := set $vars "firstStep" false }}
{{- end }} {{- /* peerIndex */ -}} 
{{- end }} {{- /* if org */ -}} 
{{- end }} {{- /* peer.Orgs */ -}}
{{- end }} {{- /* chaincode.orgs */ -}}
{{- end }} {{- /* if chaincode included */ -}}
{{- end }} {{- /* chaincodes */ -}}
{{- end }} {{- /* if flow.install.enabled */ -}}{{""}}

# fourth level: approve chaincode templates
{{- if $.Values.flow.approve.enabled }}
{{- range $i, $chaincode := .Values.network.chaincodes }}
{{- if or (not $.Values.flow.chaincode.include) (has $chaincode.name $.Values.flow.chaincode.include) }}
{{- $version := (not $chaincode.version) | ternary $.Values.chaincode.version $chaincode.version }}
{{- $_ := set $vars "firstStep" true }}
  - name: approve-chaincode--{{ $chaincode.name }}-{{ $version | replace "." "-" }}
    steps:
{{- range $channel := $chaincode.channels }}

{{- range $orgName := $chaincode.orgs }}
{{- range $i, $org := $.Values.PeerOrgs }}
{{- if eq $orgName $org.Name }}

{{- range $peerIndex := until ($org.Template.Count | int) }}
{{- $peer := (printf "peer%s" ($peerIndex | toString)) }}

{{- if or $vars.firstStep (not $.Values.flow.approve.parallel) }}
    - 
{{- end }}
      - name: maybe-approve-chaincode--{{ $chaincode.name }}-{{ $version | replace "." "-" }}--{{ $channel.name }}--{{ $org.Name }}--{{ $peer }}
        template: maybe-approve-chaincode--{{ $chaincode.name }}-{{ $version | replace "." "-" }}--{{ $channel.name }}--{{ $org.Name }}--{{ $peer }}

{{- $_ := set $vars "firstStep" false }}
{{- end }} {{- /* peerIndex */ -}} 
{{- end }} {{- /* if org */ -}} 
{{- end }} {{- /* peer.Orgs */ -}}
{{- end }} {{- /* chaincode.orgs */ -}}
{{- end }} {{- /* chaincode.channels */ -}}
{{- end }} {{- /* if chaincode included */ -}}
{{- end }} {{- /* chaincodes */ -}}
{{- end }} {{- /* if flow.approve.enabled */ -}}{{""}}

# fifth level: commit chaincode templates
{{- if $.Values.flow.commit.enabled }}

{{- range $i, $chaincode := .Values.network.chaincodes }}
{{- if or (not $.Values.flow.chaincode.include) (has $chaincode.name $.Values.flow.chaincode.include) }}
{{- $_ := set $vars "firstStep" true }}
  - name: commit-chaincode--{{ $chaincode.name }}
    steps:
{{- range $channel := $chaincode.channels }}

{{- if or $vars.firstStep (not $.Values.flow.commit.parallel) }}
    - 
{{- end }}
      - name: commit-chaincode--{{ $chaincode.name }}--{{ $channel.name }}
        template: commit-chaincode--{{ $chaincode.name }}--{{ $channel.name }}

{{- $_ := set $vars "firstStep" false }}
{{- end }} {{- /* chaincode.channels */ -}}
{{- end }} {{- /* if chaincode included */ -}}
{{- end }} {{- /* chaincodes */ -}}
{{- end }} {{- /* if flow.commit.enabled */ -}}{{""}}

# fifth level: invoke chaincode templates
{{- if $.Values.flow.invoke.enabled }}

{{- range $i, $chaincode := .Values.network.chaincodes }}
{{- if or (not $.Values.flow.chaincode.include) (has $chaincode.name $.Values.flow.chaincode.include) }}
{{- $_ := set $vars "firstStep" true }}
  - name: invoke-chaincode--{{ $chaincode.name }}
    steps:
{{- range $channel := $chaincode.channels }}
{{- range $orgName := $channel.orgs }}
{{- range $i, $org := $.Values.PeerOrgs }}

{{- if eq $orgName $org.Name }}

{{- range $peerIndex := until ($org.Template.Count | int) }}
{{- $peer := (printf "peer%s" ($peerIndex | toString)) }}

{{- if or $vars.firstStep (not $.Values.flow.invoke.parallel) }}
    - 
{{- end }}
      - name: invoke-chaincode--{{ $chaincode.name }}--{{ $channel.name }}--{{ $org.Name }}--{{ $peer }}
        template: invoke-chaincode--{{ $chaincode.name }}--{{ $channel.name }}--{{ $org.Name }}--{{ $peer }}

{{- $_ := set $vars "firstStep" false }}
{{- end }} {{- /* peerIndex */ -}} 
{{- end }} {{- /* if org */ -}} 
{{- end }} {{- /* peer.Orgs */ -}}
{{ end }} {{- /* channel.orgs */ -}}
{{- end }} {{- /* chaincode.channels */ -}}
{{- end }} {{- /* if chaincode included */ -}}
{{- end }} {{- /* chaincodes */ -}}
{{- end }} {{- /* if flow.invoke.enabled */ -}}{{""}}

# leaf install templates
{{- if $.Values.flow.install.enabled }}
{{- range $i, $chaincode := .Values.network.chaincodes }}
{{- $version := (not $chaincode.version) | ternary $.Values.chaincode.version $chaincode.version }}
{{- $language := (not $chaincode.language) | ternary $.Values.chaincode.language $chaincode.language }}
{{- if or (not $.Values.flow.chaincode.include) (has $chaincode.name $.Values.flow.chaincode.include) }}
{{- range $orgName := $chaincode.orgs }}
{{- range $i, $org := $.Values.PeerOrgs }}

{{- if eq $orgName $org.Name }}

{{- range $peerIndex := until ($org.Template.Count | int) }}
{{- $peer := (printf "peer%s" ($peerIndex | toString)) }}

  - name: maybe-install-chaincode--{{ $chaincode.name }}-{{ $version | replace "." "-" }}--{{ $org.Name }}--{{ $peer }}
    # chaincode: {{ $chaincode.name }}
    # version: {{ $version }}
    # org: {{ $org.Name }}
    # peer: {{ $peer }}
    inputs:
    retryStrategy:
      limit: {{ $.Values.retryCount }}
    script:
      image: hyperledger/fabric-tools:{{ $.Values.hyperledgerVersion }}
      command: [sh]
      source: |
          # verify if chaincode is already installed to peer
          peer lifecycle chaincode queryinstalled --peerAddresses {{- if $.Values.useActualDomains }} {{ $peer }}.{{ $org.Domain }}:7051 {{- else }} hlf-peer--{{ $org.Name | lower }}--{{ $peer | lower }}:7051 {{- end }} --tlsRootCertFiles /etc/hyperledger/fabric/tls/ca.crt >&log.txt
          echo $result

          if cat log.txt | grep -q -o 'Package ID: {{ $chaincode.name }}_{{ $version }}'; then
            echo '-- Chaincode {{ $chaincode.name }} version {{ $version }} is already installed to peer {{ $peer }}, exiting with 0' 
            exit 0 
          fi 

          echo '-- Chaincode {{ $chaincode.name }} version {{ $version }} is not installed to peer {{ $peer }}, will install..' 

          {{- if eq $language "golang" }}

          # chaincode is packed with tar, first extract it 
          mkdir -p $GOPATH/src/chaincode && 
          tar -xf /hlf_config/chaincode/{{ $chaincode.name }}.tar -C $GOPATH/src/chaincode && 
          peer chaincode install --path chaincode/{{ $chaincode.name }} --name {{ $chaincode.name }} \
              --version {{ $version }} --lang {{ $language }}

          {{- else }}
            echo '{{ $language }}'
            # chaincode is packed with tar, first extract it 
            mkdir -p /chaincode && 
            tar -xf /hlf_config/chaincode/{{ $chaincode.name }}.tar -C /chaincode && 
            peer lifecycle chaincode package /chaincode/{{ $chaincode.name }}.tar.gz --path /chaincode/{{ $chaincode.name }} --lang {{ $language }} --label {{ $chaincode.name }}_{{ $version }} &&
            peer lifecycle chaincode install /chaincode/{{ $chaincode.name }}.tar.gz
          {{- end }}

      volumeMounts:
        - mountPath: /etc/hyperledger/fabric/tls/
          name: peer-{{ $org.Name | lower }}-{{ $peer | lower }}-tls
        - mountPath: /etc/hyperledger/fabric/msp/
          name: peer-{{ $org.Name | lower }}-admin-msp
        - mountPath: /hlf_config/chaincode/
          name: chaincode-{{ $chaincode.name | lower }}
      
      env:
        - name: CORE_PEER_ADDRESS
          value: |- 
              {{- if $.Values.useActualDomains }}
                {{ $peer }}.{{ $org.Domain }}:7051
              {{- else }}
                hlf-peer--{{ $org.Name | lower }}--{{ $peer | lower }}:7051
              {{- end }}
        - name: CORE_PEER_TLS_ENABLED
          value: {{ $.Values.tlsEnabled | quote }}
        - name: FABRIC_LOGGING_SPEC
          value: {{ $.Values.logLevel }}
        - name: CORE_PEER_LOCALMSPID
          value: {{ $org.Name }}MSP
        - name: CORE_PEER_TLS_CERT_FILE
          value: /etc/hyperledger/fabric/tls/server.crt
        - name: CORE_PEER_TLS_KEY_FILE
          value: /etc/hyperledger/fabric/tls/server.key
        - name: CORE_PEER_TLS_ROOTCERT_FILE
          value: /etc/hyperledger/fabric/tls/ca.crt

{{ end }} {{- /* peerIndex */ -}} 
{{ end }} {{- /* if org */ -}} 
{{ end }} {{- /* peer.Orgs */ -}}
{{ end }} {{- /* chaincode.orgs */ -}}
{{- end }} {{- /* if chaincode included */ -}}
{{ end }} {{- /* chaincodes */ -}}
{{ end }} {{- /* if flow.install.enabled */ -}}{{""}}

# leaf approve templates
{{- if $.Values.flow.approve.enabled }}
{{- range $i, $chaincode := .Values.network.chaincodes }}
{{- $version := (not $chaincode.version) | ternary $.Values.chaincode.version $chaincode.version }}
{{- $sequence := (not $chaincode.sequence) | ternary $.Values.chaincode.sequence $chaincode.sequence }}
{{- $language := (not $chaincode.language) | ternary $.Values.chaincode.language $chaincode.language }}
{{- if or (not $.Values.flow.chaincode.include) (has $chaincode.name $.Values.flow.chaincode.include) }}
{{- range $channel := $chaincode.channels }}
{{- range $orgName := $chaincode.orgs }}
{{- range $i, $org := $.Values.PeerOrgs }}

{{- if eq $orgName $org.Name }}

{{- range $peerIndex := until ($org.Template.Count | int) }}
{{- $peer := (printf "peer%s" ($peerIndex | toString)) }}

  - name: maybe-approve-chaincode--{{ $chaincode.name }}-{{ $version | replace "." "-" }}--{{ $channel.name }}--{{ $org.Name }}--{{ $peer }}
    # chaincode: {{ $chaincode.name }}
    # version: {{ $version }}
    # channel: {{ $channel.name }}
    # org: {{ $org.Name }}
    # peer: {{ $peer }}
    inputs:
    retryStrategy:
      limit: {{ $.Values.retryCount }}
    script:
      image: hyperledger/fabric-tools:{{ $.Values.hyperledgerVersion }}
      command: [sh]
      source: |
          peer lifecycle chaincode querycommitted --channelID {{ $channel.name }} --name {{ $chaincode.name }} >&log.txt

          if cat log.txt | grep -q -o 'Version: {{ $version }}, Sequence: {{ $sequence }}, Endorsement Plugin: escc, Validation Plugin: vscc'; then
            echo '-- Chaincode {{ $chaincode.name }} version {{ $version }} is already commited on channel {{ $channel.name }} by peer {{ $peer }}, exiting with 0. Increment the sequence number for a new chaincode definition.' 
            exit 0 
          fi 
          
          if peer lifecycle chaincode checkcommitreadiness --channelID {{ $channel.name }} --name {{ $chaincode.name }} --version {{ $version }} --sequence {{ $sequence}} --init-required --output json | jq -e '.approvals | .'$(echo {{ $org.Name }}MSP)''> /dev/null; then  
            echo '-- Chaincode {{ $chaincode.name }} version {{ $version }} is already approved on channel {{ $channel.name }} by peer {{ $peer }}, exiting with 0' 
            exit 0 
          fi

          peer lifecycle chaincode queryinstalled --peerAddresses {{- if $.Values.useActualDomains }} {{ $peer }}.{{ $org.Domain }}:7051 {{- else }} hlf-peer--{{ $org.Name | lower }}--{{ $peer | lower }}:7051 {{- end }} --tlsRootCertFiles /etc/hyperledger/fabric/tls/ca.crt >&log.txt

          PACKAGE_ID=$(sed -n "/{{ $chaincode.name }}_{{ $version }}/{s/^Package ID: //; s/, Label:.*$//; p;}" log.txt)
          echo $PACKAGE_ID

          peer lifecycle chaincode approveformyorg -o {{ $vars.ordererUrl }} --sequence {{ $sequence }} --channelID {{ $channel.name }} --name {{ $chaincode.name }} --version {{ $version }} --package-id ${PACKAGE_ID} --init-required \
            {{- if $.Values.tlsEnabled }} \ 
                --tls --cafile /hlf_config/orderer-tlsca/tlscacert.pem \ 
            {{- end }} \ 

          peer lifecycle chaincode checkcommitreadiness --channelID {{ $channel.name }} --name {{ $chaincode.name }} --version {{ $version }} --sequence {{ $sequence }} --init-required --output json >&log.txt
          cat log.txt

          # peer lifecycle chaincode commit -o {{ $vars.ordererUrl }} --peerAddresses {{- if $.Values.useActualDomains }} {{ $peer }}.{{ $org.Domain }}:7051 {{- else }} hlf-peer--{{ $org.Name | lower }}--{{ $peer | lower }}:7051 {{- end }} --channelID {{ $channel.name }} --name {{ $chaincode.name }} --version {{ $version }} --sequence {{ $sequence }} --init-required \
          #   {{- if $.Values.tlsEnabled }} \ 
          #       --tls --cafile /hlf_config/orderer-tlsca/tlscacert.pem \ 
          #   {{- end }} \

      volumeMounts:
        - mountPath: /hlf_config/orderer-tlsca
          name: orderer-tlsca
        - mountPath: /etc/hyperledger/fabric/tls/
          name: peer-{{ $org.Name | lower }}-{{ $peer | lower }}-tls
        - mountPath: /etc/hyperledger/fabric/msp/
          name: peer-{{ $org.Name | lower }}-admin-msp
      
      env:
        - name: CORE_PEER_ADDRESS
          value: |- 
              {{- if $.Values.useActualDomains }}
                {{ $peer }}.{{ $org.Domain }}:7051
              {{- else }}
                hlf-peer--{{ $org.Name | lower }}--{{ $peer | lower }}:7051
              {{- end }}
        - name: CORE_PEER_TLS_ENABLED
          value: {{ $.Values.tlsEnabled | quote }}
        - name: FABRIC_LOGGING_SPEC
          value: {{ $.Values.logLevel }}
        - name: CORE_PEER_LOCALMSPID
          value: {{ $org.Name }}MSP
        - name: CORE_PEER_TLS_CERT_FILE
          value: /etc/hyperledger/fabric/tls/server.crt
        - name: CORE_PEER_TLS_KEY_FILE
          value: /etc/hyperledger/fabric/tls/server.key
        - name: CORE_PEER_TLS_ROOTCERT_FILE
          value: /etc/hyperledger/fabric/tls/ca.crt
        - name: CORE_PEER_MSPCONFIGPATH
          value: /etc/hyperledger/fabric/msp/

{{ end }} {{- /* peerIndex */ -}} 
{{ end }} {{- /* if org */ -}} 
{{ end }} {{- /* peer.Orgs */ -}}
{{ end }} {{- /* chaincode.orgs */ -}}
{{ end }} {{- /* chaincode.channels */ -}}
{{- end }} {{- /* if chaincode included */ -}}
{{ end }} {{- /* chaincodes */ -}}
{{ end }} {{- /* if flow.approve.enabled */ -}}{{""}}



# leaf commit templates
{{- if $.Values.flow.commit.enabled }}
{{- range $i, $chaincode := .Values.network.chaincodes }}
{{- $version := (not $chaincode.version) | ternary $.Values.chaincode.version $chaincode.version }}
{{- $sequence := (not $chaincode.sequence) | ternary $.Values.chaincode.sequence $chaincode.sequence }}
{{- if or (not $.Values.flow.chaincode.include) (has $chaincode.name $.Values.flow.chaincode.include) }}
{{- range $channel := $chaincode.channels }}
{{- $orgName := index $channel.orgs 0 }}
{{- $peer := (printf "peer0" ) }}
{{- range $i, $org := $.Values.PeerOrgs }}
{{- if eq $orgName $org.Name }}

  - name: commit-chaincode--{{ $chaincode.name }}--{{ $channel.name }}
    inputs:
    retryStrategy:
      limit: {{ $.Values.retryCount }}
    script:
      image: hyperledger/fabric-tools:{{ $.Values.hyperledgerVersion }}
      command: [sh]
      source: |
          peer lifecycle chaincode querycommitted --channelID {{ $channel.name }} --name {{ $chaincode.name }} >&log.txt

          if cat log.txt | grep -q -o 'Version: {{ $version }}, Sequence: {{ $sequence}}, Endorsement Plugin: escc, Validation Plugin: vscc'; then
            echo '-- Chaincode {{ $chaincode.name }} version {{ $version }} is already commited on channel {{ $channel.name }} by peer {{ $peer }}, exiting with 0. Increment the sequence number for a new chaincode definition.' 
            exit 0 
          fi 
          
          peer lifecycle chaincode checkcommitreadiness --channelID {{ $channel.name }} --name {{ $chaincode.name }} --version {{ $version }} --sequence {{ $sequence }} --init-required --output json >&log.txt
          cat log.txt

          peer lifecycle chaincode commit -o {{ $vars.ordererUrl }} --peerAddresses peer0.org1:7051 --peerAddresses peer0.org2:7051 --channelID {{ $channel.name }} --name {{ $chaincode.name }} --version {{ $version }} --sequence {{ $sequence }} --init-required \
            {{- if $.Values.tlsEnabled }} \ 
                --tls --cafile /hlf_config/orderer-tlsca/tlscacert.pem \ 
            {{- end }} \
          fcn_call='{"function":"initLedger","Args":[]}'
          peer chaincode invoke -o {{ $vars.ordererUrl }}  -C {{ $channel.name }} -n {{ $chaincode.name }} --peerAddresses peer0.org1:7051 --peerAddresses peer0.org2:7051 --isInit -c ${fcn_call} >&log.txt
          cat log.txt

      volumeMounts:
        - mountPath: /hlf_config/orderer-tlsca
          name: orderer-tlsca
        - mountPath: /etc/hyperledger/fabric/tls/
          name: peer-{{ $org.Name  | lower }}-{{ $peer | lower }}-tls
        - mountPath: /etc/hyperledger/fabric/msp/
          name: peer-{{ $org.Name  | lower }}-admin-msp
      
      env:
        - name: CORE_PEER_ADDRESS
          value: |- 
              {{- if $.Values.useActualDomains }}
                {{ $peer }}.{{ $org.Domain }}:7051
              {{- else }}
                hlf-peer--{{ $org.Name  | lower }}--{{ $peer | lower }}:7051
              {{- end }}
        - name: CORE_PEER_TLS_ENABLED
          value: {{ $.Values.tlsEnabled | quote }}
        - name: FABRIC_LOGGING_SPEC
          value: {{ $.Values.logLevel }}
        - name: CORE_PEER_LOCALMSPID
          value: {{ $org.Name  }}MSP
        - name: CORE_PEER_TLS_CERT_FILE
          value: /etc/hyperledger/fabric/tls/server.crt
        - name: CORE_PEER_TLS_KEY_FILE
          value: /etc/hyperledger/fabric/tls/server.key
        - name: CORE_PEER_TLS_ROOTCERT_FILE
          value: /etc/hyperledger/fabric/tls/ca.crt
        - name: CORE_PEER_MSPCONFIGPATH
          value: /etc/hyperledger/fabric/msp/

{{ end }} {{- /* if org */ -}} 
{{ end }} {{- /* peer.Orgs */ -}}
{{ end }} {{- /* chaincode.channels */ -}}
{{- end }} {{- /* if chaincode included */ -}}
{{ end }} {{- /* chaincodes */ -}}
{{ end }} {{- /* if flow.commit.enabled */ -}}{{""}}


# leaf invoke templates
{{- if $.Values.flow.invoke.enabled }}
{{- range $i, $chaincode := .Values.network.chaincodes }}
{{- $version := (not $chaincode.version) | ternary $.Values.chaincode.version $chaincode.version }}
{{- if or (not $.Values.flow.chaincode.include) (has $chaincode.name $.Values.flow.chaincode.include) }}
{{- range $channel := $chaincode.channels }}

{{- range $orgName := $channel.orgs }}
{{- range $i, $org := $.Values.PeerOrgs }}
{{- if eq $orgName $org.Name }}
{{- range $peerIndex := until ($org.Template.Count | int) }}
{{- $peer := (printf "peer%s" ($peerIndex | toString)) }}



  - name: invoke-chaincode--{{ $chaincode.name }}--{{ $channel.name }}--{{ $org.Name }}--{{ $peer }}
    # chaincode: {{ $chaincode.name }}
    # channel: {{ $channel.name }}
    # org: {{ $org.Name }}
    # peer: {{ $peer }}
    inputs:
    retryStrategy:
      limit: {{ $.Values.retryCount }}
    script:
      image: hyperledger/fabric-tools:{{ $.Values.hyperledgerVersion }}
      command: [sh]
      source: |
          peer lifecycle chaincode checkcommitreadiness --channelID {{ $channel.name }} --name {{ $chaincode.name }} --version {{ $version }} --init-required --output json >&log.txt
          cat log.txt

          # peer lifecycle chaincode commit -o {{ $vars.ordererUrl }} --peerAddresses peer0.org1:7051 --peerAddresses peer0.org2:7051 --channelID {{ $channel.name }} --name {{ $chaincode.name }} --version {{ $version }} --init-required \
          #   {{- if $.Values.tlsEnabled }} \ 
          #       --tls --cafile /hlf_config/orderer-tlsca/tlscacert.pem \ 
          #   {{- end }} \

          # peer chaincode invoke -C {{ $channel.name }} -o {{ $vars.ordererUrl }} \
          #     -n {{ $chaincode.name }} -c {{ $.Values.flow.invoke.function | squote }} \
          #     {{- if $.Values.tlsEnabled }}
          #         --tls --cafile /hlf_config/orderer-tlsca/tlscacert.pem \
          #     {{- end }}

      volumeMounts:
        - mountPath: /hlf_config/orderer-tlsca
          name: orderer-tlsca
        - mountPath: /etc/hyperledger/fabric/tls/
          name: peer-{{ $org.Name | lower }}-{{ $peer | lower }}-tls
        - mountPath: /etc/hyperledger/fabric/msp/
          name: peer-{{ $org.Name | lower }}-admin-msp
      
      env:
        - name: CORE_PEER_ADDRESS
          value: |- 
              {{- if $.Values.useActualDomains }}
                {{ $peer }}.{{ $org.Domain }}:7051
              {{- else }}
                hlf-peer--{{ $org.Name | lower }}--{{ $peer | lower }}:7051
              {{- end }}
        - name: CORE_PEER_TLS_ENABLED
          value: {{ $.Values.tlsEnabled | quote }}
        - name: FABRIC_LOGGING_SPEC
          value: {{ $.Values.logLevel }}
        - name: CORE_PEER_LOCALMSPID
          value: {{ $org.Name }}MSP
        - name: CORE_PEER_TLS_CERT_FILE
          value: /etc/hyperledger/fabric/tls/server.crt
        - name: CORE_PEER_TLS_KEY_FILE
          value: /etc/hyperledger/fabric/tls/server.key
        - name: CORE_PEER_TLS_ROOTCERT_FILE
          value: /etc/hyperledger/fabric/tls/ca.crt

{{ end }} {{- /* peerIndex */ -}} 
{{ end }} {{- /* if org */ -}} 
{{ end }} {{- /* peer.Orgs */ -}}
{{ end }} {{- /* channel.orgs */ -}}
{{ end }} {{- /* chaincode.channels */ -}}
{{- end }} {{- /* if chaincode included */ -}}
{{ end }} {{- /* chaincodes */ -}}
{{ end }} {{- /* if flow.invoke.enabled */ -}}{{""}}

