# !! IMPORTANT THESE ARE THE DEFAULT VALUES. TO OVERRIDE THESE VALUE PLEASE CHANGE THEM IN NETWORK YAML FILE IN THE RESPECTIVE FOLDER.
# EXAMPLE: to change tlsEnabled to true then in network.yaml in raft-tls folder change tlsEnabled: true then to run the network pass the network.yaml; e.g helm install hlf-kube ./hlf-kube/ -f raft-tls/network.yaml. Values of the file on the right will be considered.

# Default values for hlf-kube.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

hyperledgerVersion: 2.2.0
caVersion: 1.5.0

# see the Raft sample in the README for how to enable TLS
tlsEnabled: false

# use actual domain names like peer0.org3 instead of internal service names
# this should be set to true for TLS
useActualDomains: false

# adds additional DNS entries to /etc/hosts files
# see https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/#adding-additional-entries-with-hostaliases
# this value should be provided if either tlsEnabled or useActualDomains is set to true
# see the Raft sample in the README for how to use this
hostAliases: []

# common persistence settings
persistence:
  storageClass: # default

backup:
  # initiate backup procedure?
  enabled: false
restore:
  # initiate restore procedure?
  enabled: false

# common settings for CouchDB and CA ingresses
ingress:
  # all ingress subdomains will be created under this domain
  parentDomain:
  annotations:
    kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: letsencrypt-prod

# peer settings. applies to all peers
peer:
  logLevel: info
  # launch peer pods? setting to false is useful for collecting host aliases and fast restart afterwards
  launchPods: true
  chaincode:
    # attach chaincode's stdout to peer?
    attachStdout: true
    logging:
      level: info
      shim: info
  persistence:
    enabled: false
    size: 16Gi
  docker:
    dind:
      # use a side car docker in docker container?
      enabled: false
      # dind docker image
      # image: docker:19.03.8-dind
      image: docker:dind
      persistence:
        enabled: false
        size: 16Gi
  ingress:
    enabled: false
    annotations:
      # this should match the ingressClass when peer ingress controller is created
      kubernetes.io/ingress.class: "hlf-peer"
  externalService:
    # expose peers to outer world with LoadBalancer service type?
    enabled: false
    annotations:
  # if enabled, podAntiAffinity is used to spread the peer pods in the same organization among nodes
  # normally no need to disable this
  antiAffinity:
    enabled: true
    # is antiAffinity preferred or required?
    strict: false
  backup:
    # take backup of peers during backup procedure?
    enabled: true
  restore:
    # restore peers data from backup during restore procedure?
    enabled: true
  operations:
    enabled: false
    listenAddress: 0.0.0.0:9443
    servicePort: 9443
    tls:
      enabled: false
  metrics:
    enabled: false
    provider: prometheus

# CouchDB settings. applies to all CouchDB's
couchdb:
  version: 0.4.15
  userName:
  password:
  persistence:
    enabled: false
    size: 16Gi
  ingress:
    enabled: false
  backup:
    # take backup of CouchDB's during backup procedure?
    enabled: true
  restore:
    # restore CouchDB's data from backup during restore procedure?
    enabled: true

# Orderer settings. applies to all Orderer pods
orderer:
  # should be greater than 1 only if kafka orderer is used
  replicas: 1
  logLevel: info
  # launch orderer pods? setting to false is useful for collecting host aliases and fast restart afterwards
  launchPods: true
  persistence:
    enabled: false
    size: 16Gi
  # when enabled, internal communication among Raft orderers are done at a different port
  # useful when you dont want to enable TLS globally (i.e for transparent load balancing)
  # has no effect if orderer type is not etcdraft
  cluster:
    enabled: false
    # raft cluster communication port. should be in synch with consenters in configtx.yaml
    # port: 7059
  ingress:
    enabled: false
    annotations:
      # this should match the ingressClass when orderer ingress controller is created
      kubernetes.io/ingress.class: "hlf-orderer"
  externalService:
    # expose orderers to outer world with LoadBalancer service type?
    enabled: false
    annotations:
  # if enabled, podAntiAffinity is used to spread the orderer pods in the same organization among nodes
  # normally no need to disable this
  antiAffinity:
    enabled: true
    # is antiAffinity preferred or required?
    strict: false
  backup:
    # take backup of orderers during backup procedure?
    enabled: true
  restore:
    # restore orderers data from backup during restore procedure?
    enabled: true
  operations:
    enabled: false
    listenAddress: 0.0.0.0:8443
    servicePort: 8443
    tls:
      enabled: false
  metrics:
    enabled: false
    provider: prometheus

# CA (Certificate Authority) settings. applies to all CA's
ca:
  userName: admin
  password: adminpw
  logLevel: info
  ingress:
    enabled: false

# chaincode settings
chaincode:
  # fill in this array with chaincode names to limit the chaincode ConfigMap only to these ones
  include: []

# kafka settings
hlf-kafka:
  # install kafka?
  enabled: false

  # number of Kafka brokers, should be at least 4
  # https://hyperledger-fabric.readthedocs.io/en/release-1.4/kafka.html
  replicas: 4
  podManagementPolicy: Parallel

  # TODO storage classs?
  persistence:
    enabled: false
    storageClass: default
    size: 16Gi

  configurationOverrides:
    "default.replication.factor": 4 # given a 4 node Kafka cluster
    "unclean.leader.election.enable": false
    "min.insync.replicas": 3 # to permit one Kafka replica to go offline
    "message.max.bytes": "103809024" # 99 * 1024 * 1024 B
    "replica.fetch.max.bytes": "103809024" # 99 * 1024 * 1024 B
    "log.retention.ms": -1 # Since we need to keep logs indefinitely for the HL Fabric Orderer

  zookeeper:
    # should be 3, 5, or 7
    replicaCount: 3

    persistence:
      enabled: false
      storageClass: default
      size: 16Gi
