apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app: caliper-manager
  name: caliper-manager
spec:
  backoffLimit: 2
  template:
    metadata:
      labels:
        app: caliper-manager
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 3000
        fsGroup: 2000
      restartPolicy: Never
      
      {{- if .Values.use_docker_credentials }}
      imagePullSecrets:
        - name: regcred
      {{- end }}

      containers:
        - name: caliper
          image: {{.Values.caliper_image}}
          command: 
          - /bin/sh
          - "-c"
          - |
            /bin/sh <<'EOF'

            caliper launch manager
            echo "Start pushing the generated report.html and caliper.log to the git repository..."
            ls /hyperledger/caliper/workspace/

            # install yq if it does not exist
            [ ! -f "/usr/bin/yq" ] && (wget https://github.com/mikefarah/yq/releases/download/v4.2.0/yq_linux_amd64.tar.gz -O - | tar xz)
            
            report_repo_yaml="/caliper-report-git/git.yaml"
            project_url=$(./yq_linux_amd64 eval '.project | .url' "$report_repo_yaml")
            project_access_token=$(./yq_linux_amd64 eval '.project | .access_token' "$report_repo_yaml")
            git_user_email=$(./yq_linux_amd64 eval '.git_user | .email' "$report_repo_yaml")
            git_user_name=$(./yq_linux_amd64 eval '.git_user | .name' "$report_repo_yaml")
            
            if [ -f /caliper-report-git/git.yaml ] 
              then
                git config --global user.email "$git_user_email" 
                git config --global user.name "$git_user_name" 
                # git clone https://cli:$project_access_token@$project_url
                NOW_TIMESTAMP="$(date +'%s')"
                NOW="$(date)"
                DIR_NAME="report_$NOW_TIMESTAMP"
                mkdir -p  hyperledgerlab2-reports/
                if [ -f report.html ] || [ -f caliper.log ]
                then
                  cd hyperledgerlab2-reports/
                  git init
                  git remote add origin https://cli:$project_access_token@$project_url
                  mkdir $DIR_NAME
                  cp ../report.html $DIR_NAME/
                  cp ../caliper.log $DIR_NAME/
                  git add $DIR_NAME 
                  git commit -m "Report $NOW"
                  git push -u origin master
                  echo "The generated report.html and caliper.log have been successfully pushed to the git repository..."
                  exit 0
                else
                  echo "ERROR: caliper.log or report.html are not generated."
                  exit 0
                fi
              else 
                echo "ERROR: Please provide correct data in git.yaml, in order to upload the generated report.html to the repository."
                exit 0
            fi
            EOF
          tty: true
          workingDir: /hyperledger/caliper/workspace
          env:
            - name: CALIPER_BIND_SUT
              value: fabric:1.4
            - name: CALIPER_BENCHCONFIG
              value: /caliper-benchmark/config.yaml
            - name: CALIPER_NETWORKCONFIG
              value: /caliper-network/networkConfig.yaml
            - name: CALIPER_FLOW_ONLY_TEST
              value: "true"
            - name: CALIPER_WORKSPACE
              value: /hyperledger/caliper/workspace
            - name: CALIPER_BIND_ARGS
              value: "-g fs-extra"
            - name: CALIPER_PROJECTCONFIG 
              value: /caliper-config/caliper.yaml
            - name: CXXFLAGS
              value: "-Wno-cast-function-type"
            - name: CALIPER_WORKER_REMOTE
              value: "true"
            - name: CALIPER_WORKER_COMMUNICATION_METHOD
              value: "mqtt"
            - name: CALIPER_WORKER_COMMUNICATION_ADDRESS
              value: "mqtt://mosquitto.default.svc.cluster.local:1883"
          volumeMounts:
            {{- range untilStep 1 (int (add 1 .Values.fabric_num_orgs)) 1 }}
            - mountPath: /etc/hyperledger/fabric/org{{.}}/msp/
              name: peer-msp{{.}}
            - mountPath: /etc/hyperledger/fabric/org{{.}}/admin-msp/
              name: peer-admin-msp{{.}}
            {{ end }}

            - mountPath: /etc/hyperledger/fabric/ordorg1-tlsca
              name: ordorg1-tlsca

            - mountPath: /caliper-benchmark
              name: caliper-benchmark
            - mountPath: /caliper-network
              name: caliper-network
            - mountPath: /caliper-workload
              name: caliper-workload
            {{- range $channel := .Values.channels }}
            {{- range $chaincode := $channel.chaincodes }}
            - mountPath: /caliper-chaincode/{{ $chaincode.contractID }}
              name: caliper-chaincode-{{ $chaincode.contractID }}
            {{ end }}
            {{- end }}
            - mountPath: /hyperledger/caliper/workspace/
              name: caliper-workspace
            - mountPath: /caliper-config
              name: caliper-config
            - mountPath: /caliper-report-git
              name: caliper-report-git
      volumes:
        - name: caliper-workspace
          emptyDir: {}
        - name: caliper-report-git
          configMap:
            name: caliper-report-git
        - name: caliper-benchmark
          configMap:
            name: benchmarks
        - name: caliper-network
          configMap:
            name: network
        - name: caliper-workload
          configMap:
            name: workload
        - name: caliper-config
          configMap:
            name: caliper-config
        {{- range $channel := .Values.channels }}
        {{- range $chaincode := $channel.chaincodes }}
        - name: caliper-chaincode-{{ $chaincode.contractID }}
          configMap:
            name: hlf-chaincode--{{ $chaincode.contractID }}
        {{ end }}
        {{- end }}

        {{- range untilStep 1 (int (add 1 .Values.fabric_num_orgs)) 1 }}
        - name: peer-msp{{.}}
          secret:
            secretName: hlf-peer--org{{.}}--peer0-msp
            items:
              - key: config.yaml
                path: config.yaml
              - key: cert.pem
                path: signcerts/cert.pem
              - key: key.pem
                path: keystore/key.pem
              - key: cacert.pem
                path: cacerts/ca.org{{.}}-cert.pem
              - key: tlscacert.pem
                path: tlscacerts/cert.pem

        - name: peer-admin-msp{{.}}
          secret:
            secretName: hlf-peer--org{{.}}--admin-msp
            items:
              - key: config.yaml
                path: config.yaml
              - key: cert.pem
                path: signcerts/cert.pem
              - key: key.pem
                path: keystore/key.pem
              - key: cacert.pem
                path: cacerts/ca.org{{.}}-cert.pem
              - key: tlscacert.pem
                path: tlscacerts/cert.pem
        {{ end }}

        - name: ordorg1-tlsca
          secret:
            secretName: hlf-orderer--ordorg1-tlsca

